name: Deploy Arkchain Indexer to AWS (Staging)

on:
  workflow_dispatch:
  push:
    branches:
      - 180-feature-cdk-for-arkchain-indexer
    paths:
      - ".github/workflows/deploy-arkchain-indexer-staging.yml"
      - "infrastructure/cdk-ark-ecr/**"
      - "infrastructure/cdk-arkchain-indexer/**"

jobs:

  push-indexer-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install pnpm
        run: |
          npm install -g pnpm
          npm install -g aws-cdk

      - name: Deploy ECR Repository
        run: |
          cd infrastructure/cdk-ark-ecr
          pnpm install
          cdk deploy ark-ecr --outputs-file ./cdk-outputs.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CDK_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CDK_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_CDK_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Output ECR Repository URL
        id: set_ecr_url
        run: |
          cd infrastructure/cdk-ark-ecr
          ECR_URL=$(jq -r '."ark-ecr".ECRRepositoryURL' ./cdk-outputs.json)
          echo "ECR Repository URL: $ECR_URL"
          echo "ECR_URL=$ECR_URL" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CDK_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CDK_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_CDK_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Build indexer, tag, and push image to Amazon ECR
        run: |
          docker buildx create --use --name ecr-deploy-builder-arkchain-indexer
          docker buildx build --tag $ECR_URL:arkchain-indexer-staging-latest --file docker/arkchain-indexer/Dockerfile . --load
          docker push $ECR_URL:arkchain-indexer-staging-latest
        env:
          ECR_URL: ${{ env.ECR_URL }}
          RPC_PROVIDER: ${{ secrets.RPC_PROVIDER }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CDK_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CDK_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_CDK_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

  deploy:
    runs-on: ubuntu-latest
    needs: [push-indexer-image]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install Dependencies
        run: |
          cd infrastructure/cdk-arkchain-indexer
          pnpm install

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Cargo Dependencies
        uses: Swatinem/rust-cache@v2

      - name: Cache Cargo target dir
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-target-

      - name: Bootstrap Indexer
        run: |
          cd infrastructure/cdk-arkchain-indexer
          pnpm cdk bootstrap
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CDK_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets. AWS_CDK_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_CDK_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ARKCHAIN_DATABASE_URL: "postgres://arkchain-indexer:1J$^&R-I4VIo@localhost:5432/arkchain-indexer"
          ARKCHAIN_RPC_PROVIDER: "https://staging.solis.arkproject.dev/"

      - name: Deploy Indexer
        run: |
          cd infrastructure/cdk-arkchain-indexer
          pnpm cdk deploy --require-approval never
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CDK_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets. AWS_CDK_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_CDK_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          ARKCHAIN_DATABASE_URL: "postgres://arkchain-indexer:1J$^&R-I4VIo@localhost:5432/arkchain-indexer"
          ARKCHAIN_RPC_PROVIDER: "https://staging.solis.arkproject.dev/"

