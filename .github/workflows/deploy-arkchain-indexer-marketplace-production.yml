name: Deploy Arkchain Indexer Marketplace (Production)

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/deploy-arkchain-indexer-marketplace-production.yml"
      - "infrastructure/cdk-ark-ecr/**"
      - "infrastructure/cdk-ark-indexer-marketplace/**"
      - "arkchain-indexer-marketplace/**"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Apply Marketplace SQL Migrations
        uses: ./.github/actions/apply-marketplace-sql-migrations
        with:
          aws-access-key-id: ${{ secrets.AWS_CDK_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_CDK_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          secret-id: ${{ vars.AWS_ARKPROJECT_DATABASE_PROD_SECRET_NAME }}
          discord-webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Send notification to dev-updates channel
        uses: ./.github/actions/discord-notification
        with:
          discord-webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          message: "Deploying `arkchain-indexer-marketplace` on Production environment..."

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/index
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-index-

      - name: Cache Cargo build
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Build the application
        run: cargo build --release -p arkchain-indexer-marketplace

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SOLIS_SCALEWAY_SSH_KEY }}

      - name: Ensure deployment directory exists
        run: ssh -o StrictHostKeyChecking=no github@${{ vars.SOLIS_SERVER_IP }} "mkdir -p /opt/arkchain-indexer-marketplace"

      - name: Stop the service
        run: ssh -o StrictHostKeyChecking=no github@${{ vars.SOLIS_SERVER_IP }} "sudo systemctl stop arkchain-indexer-marketplace.service"

      - name: Upload binary to Scaleway server
        run: scp -o StrictHostKeyChecking=no target/release/arkchain-indexer-marketplace github@${{ vars.SOLIS_SERVER_IP }}:/opt/arkchain-indexer-marketplace/

      - name: Restart the service
        run: ssh -o StrictHostKeyChecking=no github@${{ vars.SOLIS_SERVER_IP }} "sudo systemctl start arkchain-indexer-marketplace.service"

      - name: Send success notification to dev-updates channel
        if: success()
        uses: ./.github/actions/discord-notification
        with:
          discord-webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          message: "✅ Successfully deployed `arkchain-indexer-marketplace` on Production environment."

      - name: Send failure notification to dev-updates channel
        if: failure()
        uses: ./.github/actions/discord-notification
        with:
          discord-webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          message: "❌ Failed to deploy `arkchain-indexer-marketplace` on Production environment. Check the logs [here](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})."
