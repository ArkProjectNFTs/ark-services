name: CDK API Stack Deploy on Main & PR

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/cdk-api-deploy.yml"
      - "infrastructure/cdk/**"
      - "ark-lambdas/**"
      - "ark-dynamodb/**"
  pull_request:
    types: [opened, synchronize, closed]
    paths:
      - ".github/workflows/cdk-api-deploy.yml"
      - "infrastructure/cdk/**"
      - "ark-lambdas/**"
      - "ark-dynamodb/**"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Dependencies
        run: |
          cd infrastructure/cdk
          pnpm install

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Cargo Dependencies
        uses: Swatinem/rust-cache@v2

      - name: Cache Cargo target dir
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-target-

      - name: Build Rust Lambda with Cargo
        run: |
          pip install cargo-lambda

      - name: CDK Bootstrap (if necessary)
        run: |
          cd infrastructure/cdk
          pnpm cdk bootstrap --force -c branch=${{ github.ref_name }} -c isPullRequest=${{ github.event_name == 'pull_request' }} -c prNumber=${{ github.event.number || '' }} -c targetBranch=${{ github.event.pull_request.base.ref || '' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CDK_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets. AWS_CDK_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_CDK_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: CDK Deploy (on push)
        if: github.event_name == 'push'
        run: |
          cd infrastructure/cdk
          pnpm cdk deploy --require-approval never -c branch=${{ github.ref_name }} -c isPullRequest=false
          echo "GitHub Ref: ${{ github.ref }}"
          echo "GitHub Ref Name: ${{ github.ref_name }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CDK_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets. AWS_CDK_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_CDK_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: CDK Deploy (on PR open/synchronize)
        if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize') && github.event.pull_request.base.ref != 'main'
        run: |
          cd infrastructure/cdk
          pnpm cdk deploy --require-approval never -c branch=${{ github.head_ref }} -c isPullRequest=true -c prNumber=${{ github.event.number }} -c targetBranch=${{ github.event.pull_request.base.ref }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CDK_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CDK_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_CDK_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: CDK Destroy (on PR close)
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        run: |
          cd infrastructure/cdk
          pnpm cdk destroy --force -c branch=${{ github.head_ref }} -c isPullRequest=true -c prNumber=${{ github.event.number }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_CDK_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_CDK_SECRET_ACCESS_KEY }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_CDK_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
