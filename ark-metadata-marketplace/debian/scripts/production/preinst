#!/bin/sh
set -ex

echo "Starting preinst script"
echo "Running as user: $(whoami)"
echo "Current directory: $(pwd)"

# Vérification des permissions
ls -ld /usr/share/ark-metadata-marketplace || true
ls -ld /etc/ark-project || true

case "$1" in
    install|upgrade)
        echo "Running install/upgrade case"
        
        mkdir -p /usr/share/ark-metadata-marketplace/src/ark-metadata-marketplace/ark-metadata-marketplace-test || {
            echo "Failed to create marketplace test directory"
            exit 1
        }
        mkdir -p /etc/ark-project || {
            echo "Failed to create ark-project directory"
            exit 1
        }

        CONFIG_FILE="/etc/ark-project/api-marketplace.config.production.yml"
        ls -l "$CONFIG_FILE" 2>/dev/null || true
        
        if [ -f "$CONFIG_FILE" ]; then
            echo "Config file exists, patching..."
            # Vérification de chaque paramètre avec debug
            for param in aws_access_key_id aws_secret_access_key aws_default_region aws_secret_bucket_name rcp_provider chain_id ipfs_timeout_duration loop_delay_duration ipfs_gateway_uri filter refresh_contract_metadata rust_log aws_secret_read_db aws_secret_eleasticsearch_db; do
                echo "Checking $param..."
                grep -q "^$param:" "$CONFIG_FILE" || {
                    echo "Adding $param..."
                    case "$param" in
                        aws_access_key_id|aws_secret_access_key|aws_default_region|filter) echo "$param: \"\"" ;;
                        aws_secret_bucket_name) echo "$param: \"prod/ark-bucket-name\"" ;;
                        rcp_provider) echo "$param: \"http://localhost:6060/v0_7\"" ;;
                        chain_id) echo "$param: \"0x534e5f4d41494e\"" ;;
                        ipfs_timeout_duration|loop_delay_duration) echo "$param: \"1m\"" ;;
                        ipfs_gateway_uri) echo "$param: \"https://ipfs.arkproject.dev/ipfs/\"" ;;
                        refresh_contract_metadata) echo "$param: \"false\"" ;;
                        rust_log) echo "$param: \"info,sqlx::query=trace\"" ;;
                        aws_secret_read_db) echo "$param: \"prod/ark-db-credentials-read-private\"" ;;
                        aws_secret_eleasticsearch_db) echo "$param: \"prod/ark-elasticsearch-credentials\"" ;;
                    esac
                } >> "$CONFIG_FILE" || {
                    echo "Failed to append $param"
                    exit 1
                }
            done
        else
            echo "Creating new config file..."
            cat > "$CONFIG_FILE" << 'EOF' || exit 1
aws_access_key_id: ""
aws_secret_access_key: ""
aws_default_region: ""
aws_secret_bucket_name: "prod/ark-bucket-name"
rcp_provider: "http://localhost:6060/v0_7"
chain_id: "0x534e5f4d41494e"
ipfs_timeout_duration: "1m"
loop_delay_duration: "1m"
ipfs_gateway_uri: "https://ipfs.arkproject.dev/ipfs/"
filter: ""
refresh_contract_metadata: false
rust_log: "info"
aws_secret_read_db: "prod/ark-db-credentials-read-private"
aws_secret_eleasticsearch_db: "prod/ark-elasticsearch-credentials"
EOF
        fi
        ;;
    abort-upgrade)
        ;;
    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
        ;;
esac

exit 0