[workspace.package]
version = "0.1.0"
authors = ["Screenshot Labs", "Starknet community"]
license = "MIT OR Apache-2.0"
readme = "README.md"
#documentation = "https://docs.rs/..."
repository = "https://github.com/ArkProjectNFTs/ark-services"
homepage = "https://arkproject.dev"
edition = "2021"

[workspace]
members = [
  "ark-indexer",
  "ark-dynamodb",
  "ark-lambdas/apigw/lambda-http-common",
  "ark-lambdas/apigw/lambda-playground",
  "ark-lambdas/apigw/lambda-get-contract",
  "ark-lambdas/apigw/lambda-get-contracts",
  "ark-lambdas/apigw/lambda-get-contract-tokens",
  "ark-lambdas/apigw/lambda-get-contract-events",
  "ark-lambdas/apigw/lambda-get-owner-tokens",
  "ark-lambdas/apigw/lambda-get-owner-contracts",
  "ark-lambdas/apigw/lambda-get-token",
  "ark-lambdas/apigw/lambda-get-token-events",
  "ark-lambdas/apigw/lambda-post-refresh-token-metadata",
  "ark-lambdas/apigw/lambda-get-owner-events",
  "ark-lambdas/lambda-block-indexer",
  "ark-metadata-refresh",
  "ark-sqlx",
]
resolver = "2"

[workspace.dependencies]
anyhow = "1.0"
ark-dynamodb = { path = "ark-dynamodb" }
ark-sqlx = { path = "ark-sqlx" }
arkproject = { git = "https://github.com/ArkProjectNFTs/ark-project", tag = "v0.21.1" }
# arkproject = { path = "../ark-project" }
async-trait = "0.1.73"
lambda-http-common = { path = "ark-lambdas/apigw/lambda-http-common" }
tokio = { version = "1", features = ["full"] }
sqlx = { version = "0.7", features = ["postgres", "runtime-tokio"] }
serde = "1.0.160"
serde_json = "1.0.96"
serde_with = "2.3.2"
starknet = { git = "https://github.com/ArkProjectNFTs/starknet-rs", tag = "v0.7.2" }
#starknet = { path = "../starknet-rs" }
thiserror = "1.0.40"
